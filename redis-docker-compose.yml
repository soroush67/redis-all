version: "3.9"

services:
  # --- 1. Redis Standalone (for simple testing) ---
  redis-standalone:
    image: redis:7.2
    container_name: redis-standalone
    command: ["redis-server", "--requirepass", "StrongPassword123"]
    ports:
      - "6379:6379"
    volumes:
      - ./data/standalone:/data
    restart: unless-stopped

  # --- 2. Redis Sentinel-based HA setup ---
  redis-master:
    image: redis:7.2
    container_name: redis-master
    command: >
      redis-server
      --appendonly yes
      --requirepass masterpass
      --masterauth masterpass
      --protected-mode no
    ports:
      - "6380:6379"
    volumes:
      - ./data/master:/data
    networks:
      - redis-ha
    restart: unless-stopped

  redis-slave1:
    image: redis:7.2
    container_name: redis-slave1
    command: >
      redis-server
      --replicaof redis-master 6379
      --masterauth masterpass
      --requirepass slavepass
      --appendonly yes
      --protected-mode no
    ports:
      - "6381:6379"
    depends_on:
      - redis-master
    volumes:
      - ./data/slave1:/data
    networks:
      - redis-ha
    restart: unless-stopped

  redis-slave2:
    image: redis:7.2
    container_name: redis-slave2
    command: >
      redis-server
      --replicaof redis-master 6379
      --masterauth masterpass
      --requirepass slavepass
      --appendonly yes
      --protected-mode no
    ports:
      - "6382:6379"
    depends_on:
      - redis-master
    volumes:
      - ./data/slave2:/data
    networks:
      - redis-ha
    restart: unless-stopped

  sentinel1:
    image: redis:7.2
    container_name: sentinel1
    command: redis-sentinel /etc/redis/sentinel.conf
    volumes:
      - ./sentinel/sentinel.conf:/etc/redis/sentinel.conf
    ports:
      - "26379:26379"
    depends_on:
      - redis-master
      - redis-slave1
      - redis-slave2
    networks:
      - redis-ha
    restart: unless-stopped

  # --- 3. Redis Cluster (6-node setup) ---
  redis-node-1:
    image: redis:7.2
    container_name: redis-node-1
    command: >
      redis-server
      --port 7000
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --appendonly yes
      --protected-mode no
    ports:
      - "7000:7000"
    networks:
      redis-cluster:
        ipv4_address: 172.28.0.11

  redis-node-2:
    image: redis:7.2
    container_name: redis-node-2
    command: >
      redis-server
      --port 7001
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --appendonly yes
      --protected-mode no
    ports:
      - "7001:7001"
    networks:
      redis-cluster:
        ipv4_address: 172.28.0.12

  redis-node-3:
    image: redis:7.2
    container_name: redis-node-3
    command: >
      redis-server
      --port 7002
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --appendonly yes
      --protected-mode no
    ports:
      - "7002:7002"
    networks:
      redis-cluster:
        ipv4_address: 172.28.0.13

  redis-node-4:
    image: redis:7.2
    container_name: redis-node-4
    command: >
      redis-server
      --port 7003
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --appendonly yes
      --protected-mode no
    ports:
      - "7003:7003"
    networks:
      redis-cluster:
        ipv4_address: 172.28.0.14

  redis-node-5:
    image: redis:7.2
    container_name: redis-node-5
    command: >
      redis-server
      --port 7004
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --appendonly yes
      --protected-mode no
    ports:
      - "7004:7004"
    networks:
      redis-cluster:
        ipv4_address: 172.28.0.15

  redis-node-6:
    image: redis:7.2
    container_name: redis-node-6
    command: >
      redis-server
      --port 7005
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --appendonly yes
      --protected-mode no
    ports:
      - "7005:7005"
    networks:
      redis-cluster:
        ipv4_address: 172.28.0.16

  # --- 4. RedisInsight (Web UI) ---
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    ports:
      - "8001:8001"
    networks:
      - redis-ha
      - redis-cluster
    restart: unless-stopped

# ---------------------------
# NETWORKS
# ---------------------------
networks:
  redis-ha:
    driver: bridge

  redis-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
